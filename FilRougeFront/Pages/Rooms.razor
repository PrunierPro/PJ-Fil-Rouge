@page "/rooms"
@using System.Net.Http.Json;
@using System.Globalization;
@using FilRougeFront.DTOs;
@using System.Collections.Generic;
@using FilRougeCore.Models;
@using FilRougeFront.Services;
@using Microsoft.AspNetCore.Components;
@inject Blazored.LocalStorage.ILocalStorageService _localStorage;
@inject NavigationManager Navigator;

<h3>Recherche de Salles de Sport</h3>


@if (User is not null && IsAdminMode)
{}
    <div class="row">
        <button class="btn btn-success" @onclick="AddRoom"><i class="bi bi-plus-square"></i>&ensp; Ajouter une salle</button>
    </div>

    @if (RoomToEdit != null)
    {
        <EditForm OnValidSubmit="SubmitRoom" Model="RoomToEdit">
            <DataAnnotationsValidator />

            <div class="form-row">
                <div class="form-group" style="width:100%">
                    <label for="name">Nom:</label>
                    <InputText class="form-control" id="name" placeholder="Saisir le nom" @bind-Value="RoomToEdit.Name" />
                    <ValidationMessage For="() => RoomToEdit.Name" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group" style="width:100%">
                    <label for="location">Localisation :</label>
                    <InputText class="form-control" id="location" placeholder="Saisir la localisation" @bind-Value="RoomToEdit.Location" />
                    <ValidationMessage For="() => RoomToEdit.Location" />
                </div>
            </div>
@* 
            <div class="form-row">
                <div class="form-group" style="width:100%">
                    <label for="schedules">Horaires :</label>
                    <InputSelect class="form-control" id="schedules" @bind-Value="RoomToEdit.Schedules" multiple="multiple">
                        @foreach (var schedule in Enum.GetValues(typeof(Schedule)))
                        {
                            <option value="@schedule">@schedule.ToString()</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => RoomToEdit.Schedules" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group" style="width:100%">
                    <label for="activities">Activités :</label>
                    <InputSelect class="form-control" id="activities" @bind-Value="RoomToEdit.Activities" multiple="multiple">
                        @foreach (var activity in Enum.GetValues(typeof(Activity)))
                        {
                            <option value="@activity">@activity.ToString()</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => RoomToEdit.Activities" />
                </div>
            </div> *@

            <div class="form-row">
                <button type="submit" class="btn btn-primary">Validation</button>
            </div>
        </EditForm>

    }


<p>
    <label for="localisation">Localisation:</label>
    <InputText id="localisation" @bind-Value="filtresRecherche.Location" />
</p>

<!-- Ajoutez ici d'autres filtres de recherche (types d'activités, horaires, etc.) -->

@* <button @onclick="RechercherSallesDeSport">Rechercher</button> *@

<div>
    @if (sallesDeSport != null)
    {
        @foreach (var salle in sallesDeSport)
        {
            <p>@salle.Name - @salle.Location</p>
        }
    }
</div>
