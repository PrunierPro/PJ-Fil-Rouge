// <auto-generated />
using System;
using FilRougeApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilRougeApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231031134416_DefaultUSER")]
    partial class DefaultUSER
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivityRoom", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("ActivityRoom");

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            RoomId = 2
                        },
                        new
                        {
                            ActivityId = 2,
                            RoomId = 1
                        },
                        new
                        {
                            ActivityId = 3,
                            RoomId = 1
                        },
                        new
                        {
                            ActivityId = 4,
                            RoomId = 1
                        },
                        new
                        {
                            ActivityId = 5,
                            RoomId = 2
                        },
                        new
                        {
                            ActivityId = 6,
                            RoomId = 2
                        });
                });

            modelBuilder.Entity("FilRougeCore.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fitness"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Yoga"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Danse"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Zumba"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pilates"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Cardio"
                        });
                });

            modelBuilder.Entity("FilRougeCore.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Message = "Message Comment 1 ...",
                            Rating = 2,
                            SessionId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Message = "Message Comment 2 ...",
                            Rating = 3,
                            SessionId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Message = "Message Comment 3 ...",
                            Rating = 4,
                            SessionId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Message = "Message Comment 4 ...",
                            Rating = 5,
                            SessionId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("FilRougeCore.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageURL = "/images/yoga.PNG",
                            Location = "1er étage - 4 rue tartempion Lille",
                            Name = "Salle1"
                        },
                        new
                        {
                            Id = 2,
                            ImageURL = "/images/fitness.PNG",
                            Location = "RDC - 4 rue tartempion Lille",
                            Name = "Salle2"
                        });
                });

            modelBuilder.Entity("FilRougeCore.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CloseTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpenTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CloseTime = new DateTime(1900, 1, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpenTime = new DateTime(1900, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            CloseTime = new DateTime(1900, 1, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpenTime = new DateTime(1900, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 1
                        },
                        new
                        {
                            Id = 3,
                            CloseTime = new DateTime(1900, 1, 1, 20, 0, 0, 0, DateTimeKind.Local),
                            Day = "Monday",
                            OpenTime = new DateTime(1900, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 1
                        },
                        new
                        {
                            Id = 4,
                            CloseTime = new DateTime(1900, 1, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpenTime = new DateTime(1900, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 1
                        });
                });

            modelBuilder.Entity("FilRougeCore.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new DateTime(2023, 11, 27, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 1,
                            StartTime = new DateTime(2023, 11, 27, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new DateTime(2023, 11, 28, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 2,
                            StartTime = new DateTime(2023, 11, 28, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FilRougeCore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "2 rue tartempion 55555 Bidule",
                            Email = "root@sportscorp.com",
                            FirstName = "Root",
                            IsAdmin = true,
                            LastName = "ROOT",
                            PassWord = "UEFzczAwKytsYSBjbMOpIHN1cGVyIHNlY3LDqHRlIGRlIGxhIHBva2Vtb24gYXBp",
                            PhoneNumber = "0101010101"
                        },
                        new
                        {
                            Id = 2,
                            Address = "10 rue tartempion 55555 Turlututu",
                            Email = "defaultuser@email.com",
                            FirstName = "Default",
                            IsAdmin = false,
                            LastName = "USER",
                            PassWord = "UEFzczAwKytsYSBjbMOpIHN1cGVyIHNlY3LDqHRlIGRlIGxhIHBva2Vtb24gYXBp",
                            PhoneNumber = "0202020202"
                        });
                });

            modelBuilder.Entity("SessionsUser", b =>
                {
                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SessionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("SessionsUser");

                    b.HasData(
                        new
                        {
                            SessionId = 1,
                            UserId = 2
                        },
                        new
                        {
                            SessionId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ActivityRoom", b =>
                {
                    b.HasOne("FilRougeCore.Models.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilRougeCore.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilRougeCore.Models.Comment", b =>
                {
                    b.HasOne("FilRougeCore.Models.Session", "Session")
                        .WithMany("Comments")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilRougeCore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FilRougeCore.Models.Schedule", b =>
                {
                    b.HasOne("FilRougeCore.Models.Room", "Room")
                        .WithMany("Schedules")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("FilRougeCore.Models.Session", b =>
                {
                    b.HasOne("FilRougeCore.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("SessionsUser", b =>
                {
                    b.HasOne("FilRougeCore.Models.Session", null)
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilRougeCore.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilRougeCore.Models.Room", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("FilRougeCore.Models.Session", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
